# Stage 1: Build the Go application
FROM golang:1.21-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy the Go module files and download dependencies.
COPY go.mod ./
COPY go.sum ./
RUN go mod download

# Copy the rest of the application source code.
COPY *.go ./

# Build the Go application.
# CGO_ENABLED=0 is important for creating a static binary that doesn't depend on C libraries.
# -o /accounts-service specifies the output file name.
RUN CGO_ENABLED=0 go build -o /accounts-service

# Stage 2: Create the final, lightweight container image
FROM alpine:latest

# Set the working directory
WORKDIR /

# Copy the built binary from the builder stage
COPY --from=builder /accounts-service /accounts-service

# Expose port 80 for the service
EXPOSE 80

# The command to run when the container starts
ENTRYPOINT ["/accounts-service"]

